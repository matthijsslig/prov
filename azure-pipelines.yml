trigger:
- new

pool: Agent007

variables:
- name: tenantId
  value: f82b3c62-b635-402b-afa2-a1a807bbfd42
- name: servicePrincipalId
  value: 52cc5536-a316-466c-8bf4-3868efbe0811
- name: servicePrincipalKey
  value: ENH8Q~oAYL06mTDNbXiMmFUeM9VQdhPOr3Rqjbk-


stages:
  - stage: tfvalidate 
    jobs:
      - job: validate
        steps:

          - script: |
              curl -O https://releases.hashicorp.com/terraform/$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r -M .current_version)/terraform_$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r -M .current_version)_linux_amd64.zip
              unzip terraform_*.zip
              sudo mv terraform /usr/local/bin/
              terraform --version

              wget https://dot.net/v1/dotnet-install.sh
              chmod +x dotnet-install.sh
              ./dotnet-install.sh --version 3.1.x
              export PATH="$HOME/.dotnet":$PATH
              dotnet --version

              curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
              az login 

              terraform init

              terraform validate

  - stage: tfdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:

          - task: TerraformInstaller@0
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'

          - task: TerraformTaskV3@3
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'

          - task: TerraformTaskV3@3
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
        
          - task: TerraformTaskV3@3
            displayName: apply
            inputs:
              provider: 'azurerm'
              command: 'apply'

#new