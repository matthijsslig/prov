trigger:
- new

pool: Agent007

variables:
- name: tenantId
  value: f82b3c62-b635-402b-afa2-a1a807bbfd42
- name: servicePrincipalId
  value: 52cc5536-a316-466c-8bf4-3868efbe0811
- name: servicePrincipalKey
  value: ENH8Q~oAYL06mTDNbXiMmFUeM9VQdhPOr3Rqjbk-


stages:
  - stage: tfvalidate 
    jobs:
      - job: validate
        steps:

          - task: TerraformInstaller@0
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'

          - task: UseDotNet@2
            displayName: 'Use .NET Core SDK'
            inputs:
              packageType: 'sdk'
              version: '3.1.x'
              installationPath: $(Agent.ToolsDirectory)/dotnet

          - script: | 
              curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
              az login --service-principal -u $(servicePrincipalId) -p $(servicePrincipalKey) --tenant $(tenantId)

          - task: TerraformTaskV3@3
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              backendServiceArm: '1seZggKdACdlgCXwUchss+mVOqfhZI8bcfjd9tdHpXUc/4hI3EcxATAfEAaSieA35TdJidW10sgY+AStIBybmg=='
              backendAzureRmResourceGroupName: 'matthijs_sliggers-rg'
              backendAzureRmStorageAccountName: 'backendmatthijs'
              backendAzureRmContainerName: 'backendcontainer'
              backendAzureRmKey: 'state.tfstate'
              
          - task: TerraformTaskV3@3
            displayName: validate
            inputs:
              provider: 'azurerm'
              command: 'validate'

  - stage: tfdeploy
    condition: succeeded('tfvalidate')
    dependsOn: tfvalidate
    jobs:
      - job: apply
        steps:

          - task: TerraformInstaller@0
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'

          - task: TerraformTaskV3@3
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'

          - task: TerraformTaskV3@3
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
        
          - task: TerraformTaskV3@3
            displayName: apply
            inputs:
              provider: 'azurerm'
              command: 'apply'
